{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","className","map","todo","id","completed","title","classNames","type","onClick","TodoFilter","setFilterType","setQuery","query","defaultValue","onChange","event","target","value","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","useState","user","setUser","userId","useEffect","getUser","href","email","name","App","initialTodos","setInitialTodos","filterType","formattedQuery","trim","toLowerCase","fetchGoods","catch","filteredTodos","useMemo","findQuery","queryToSearch","filter","includes","activeTodos","completedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77dda17d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, setSelectedTodo }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const {\n          id,\n          completed,\n          title,\n        } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span\n                  className=\"icon\"\n                  data-cy=\"iconCompleted\"\n                >\n                  <i className=\"fas fa-check\"> </i>\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","type Props = {\n  setFilterType: (type: string) => void\n  setQuery: (query: string) => void\n  query: string\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterType,\n  setQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            defaultValue=\"all\"\n            onChange={(event) => {\n              setFilterType(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => (\n            setQuery(event.target.value)\n          )}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length !== 0 && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n// import { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo\n  setSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    userId,\n    completed,\n    title,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {/* eslint-disable-next-line */}\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterType, setFilterType] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const formattedQuery = query.trim().toLowerCase();\n\n  const filter = (type: string) => {\n    const findQuery = (queryToSearch: string, todos: Todo[]) => {\n      return todos.filter((todo) => (\n        todo.title.toLowerCase().includes(queryToSearch)\n      ));\n    };\n\n    switch (type) {\n      case 'all':\n        return findQuery(formattedQuery, initialTodos);\n\n      case 'active': {\n        const activeTodos = initialTodos.filter((todo) => !todo.completed);\n\n        return findQuery(formattedQuery, activeTodos);\n      }\n\n      case 'completed': {\n        const completedTodos = initialTodos.filter((todo) => todo.completed);\n\n        return findQuery(formattedQuery, completedTodos);\n      }\n\n      default: return initialTodos;\n    }\n  };\n\n  const fetchGoods = () => (\n    getTodos()\n      .then((todo) => setInitialTodos(todo))\n      .catch(() => 'An error occured when loading todos'));\n\n  useEffect(() => {\n    fetchGoods();\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return filter(filterType);\n  }, [filterType, initialTodos, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterType={setFilterType}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            {initialTodos.length > 0 ? (\n              <div className=\"block\">\n                <TodoList\n                  todos={filteredTodos}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              </div>\n            ) : (<Loader />)}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}